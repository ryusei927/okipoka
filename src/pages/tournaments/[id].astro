---
// ページ: トーナメント詳細 (/tournaments/[id])
// 目的: Firestore から該当IDのトーナメント情報を取得して詳細を表示する。
// 注意:
//  - prerender=false なので、各アクセス時にサーバー側でデータを取得（SSRandering）。
//  - Firebaseのクライアント設定は公開前提（セキュリティはFirestoreルールで担保）。
import Analytics from '@vercel/analytics/astro';
import Header from "../../components/Header.astro";
import Footer from "../../components/Footer.astro";
import "../../styles/mainstyle.css";
import "../../styles/header_footer.css";
import AdSectionVIP_1 from "../../components/AdSectionVIP_1.astro";
import AdSectionVIP_2 from "../../components/AdSectionVIP_2.astro";

export const prerender = false; // 静的化しない（毎回サーバーでデータを読む）

// Firebase SDK（アプリ初期化 & Firestore 読み取り）
import { initializeApp } from "firebase/app";
import { getFirestore, doc, getDoc } from "firebase/firestore";

// Firebaseの接続情報（クライアント用）
// ※APIキー自体は秘匿情報ではなく、権限制御は Firestore のセキュリティルールで行う
const firebaseConfig = {
  apiKey: "AIzaSyBhItIbOxR6rXdClsDidrcB1iB1714paAs",
  authDomain: "okipoka-68419.firebaseapp.com",
  projectId: "okipoka-68419",
  storageBucket: "okipoka-68419.appspot.com",
  messagingSenderId: "749122576664",
  appId: "1:749122576664:web:20b93253162b185d993e6d",
  measurementId: "G-GN4PCM7BZB"
};

// Firebaseアプリ & Firestore を初期化
const app = initializeApp(firebaseConfig);
const db = getFirestore(app);

// URLパラメータからドキュメントIDを取得
const { id } = Astro.params;

// 該当トーナメントのドキュメントを取得
const docRef = doc(db, "tournaments", id as string);
const snap = await getDoc(docRef);
const data = snap.exists() ? snap.data() : null; // 存在しない場合は null

// ...existing code...

// プライズ文字列からURL抽出＆整形（画像URL対応）
// - matchAll を使わずに .match で取得
// - TypeScript の型を明示
const prizeText: string = String(data?.prize ?? "");
const prizeUrls: string[] = prizeText.match(/https?:\/\/\S+/g) ?? [];
const prizeTextWithoutUrls: string = prizeText.replace(/https?:\/\/\S+/g, "").trim();
const isPrizeImageUrl = (u: string): boolean =>
  /\.(png|jpe?g|gif|webp|svg)(\?|$)/i.test(u) ||
  (u.includes("firebasestorage.googleapis.com") && u.includes("alt=media"));

// ...existing code...

// 追加情報: 投稿者のinstagramリンク（usersコレクションの同メール/IDから取得）
let instagramUrl = "";
if (data?.postedBy) {
  const userRef = doc(db, "users", data.postedBy);
  const userSnap = await getDoc(userRef);
  if (userSnap.exists()) {
    const userData = userSnap.data();
    instagramUrl = userData.instagramUrl || ""; // 未設定なら空文字
  }
}
---

<html lang="ja">
  <head>
    <!-- 文字コード（日本語向け基本設定） -->
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>トーナメント詳細 | OKIPOKA</title>

    <!-- ページ固有のスタイル（見出しやブロックの装飾）。将来的にCSSへ移行してもOK -->
    <style>
      /* ーーーーー レイアウトの器 ーーーーー */
      .main-container {
        padding: 3rem 1.5rem;
        max-width: 900px;
        margin: 0 auto;
        background-color: #fff;
        border-radius: 12px;
        box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
        font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen,
          Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif;
      }

      /* ーーーーー ページタイトル ーーーーー */
      h1.title {
        font-size: 2.4rem;
        margin-bottom: 2rem;
        border-bottom: 3px solid #ff7f00; /* オレンジの下線で強調 */
        padding-bottom: 0.75rem;
        color: #222;
        text-align: center;
        font-weight: 700;
        letter-spacing: 0.05em;
      }

      /* ーーーーー セクション見出し（基本情報/参加情報/その他） ーーーーー */
      .section-label {
        font-size: 1.4rem;
        margin-top: 2.5rem;
        margin-bottom: 1rem;
        color: #ff7f00;
        border-left: 6px solid #ff7f00; /* 左側に太いライン */
        padding-left: 0.75rem;
        font-weight: 600;
      }

      /* ーーーーー 情報ブロックのカード ーーーーー */
      .tournament-item {
        background-color: #fafafa;
        border-radius: 10px;
        padding: 2rem 2rem;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
        margin-bottom: 2.5rem;
        border-top: 1px solid #ddd;
      }

      /* 各行（ラベル: 値）を横並びにして読みやすく */
      .tournament-item p {
        font-size: 1.4rem;
        margin: 0.6rem 0;
        line-height: 1.9;
        color: #444;
        border-bottom: 1px solid #eee;
        padding-bottom: 0.5rem;
        /* 改行を防ぎつつ可変レイアウトにする */
        display: flex;
        align-items: baseline;
        gap: 0.75rem;
      }

      /* 左側のラベル幅を一定にして列を揃える */
      .tournament-item p strong {
        flex: 0 0 7.5em;
        white-space: nowrap;
        color: #333;
        font-weight: 600;
      }

      /* リンクの見た目（通常/ホバー） */
      .tournament-item a {
        color: #ff7f00;
        text-decoration: underline;
        font-weight: 600;
        transition: color 0.3s ease;
      }
      .tournament-item a:hover,
      .tournament-item a:focus {
        color: #cc6600;
      }

      /* ボタン風リンク（外部URLを開く等） */
      .tournament-item a.button-link {
        display: inline-block;
        padding: 6px 12px;
        background-color: #eee;
        color: #333;
        border-radius: 6px;
        text-decoration: none;
        font-weight: 500;
        font-size: 1rem;
        transition: background-color 0.3s, color 0.3s;
      }
      .tournament-item a.button-link:hover {
        background-color: #ddd;
        color: #000;
      }

      /* 一覧へ戻るボタン */
      .back-link {
        display: block;
        margin: 3rem auto 0;
        font-size: 1.2rem;
        color: #fff;
        text-align: center;
        text-decoration: none;
        background-color: #ff7f00;
        padding: 0.8rem 1.5rem;
        border-radius: 8px;
        transition: all 0.3s ease;
        width: fit-content;
      }
      .back-link:hover,
      .back-link:focus {
        background-color: #cc6600;
        box-shadow: 0 0 8px rgba(255, 127, 0, 0.5);
      }

      /* イベント名の目立たせ */
      .event-name-highlight {
        background-color: #f9f9f9;
        padding: 1.2rem 2rem;
        border-left: 5px solid #999;
        border-radius: 8px;
        font-size: 1.8rem;
        font-weight: 700;
        color: #333;
        margin-bottom: 2.5rem;
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);
        text-align: center;
      }

      /* スマホでのタイポと余白最適化 */
      @media (max-width: 600px) {
        .main-container { padding: 2rem 1rem; }
        .tournament-item p strong { flex-basis: 6.5em; font-size: 1rem; }
        .tournament-item p { font-size: 1.2rem; }
        h1.title { font-size: 1.8rem; margin-bottom: 1.5rem; }
        .section-label { font-size: 1.1rem; margin-top: 2rem; margin-bottom: 0.8rem; padding-left: 0.6rem; border-left-width: 4px; }
        .event-name-highlight { font-size: 1.5rem; padding: 1rem; }
      }

      .event-name-highlight h2 {
        position: relative;
        display: inline-block;
        font-size: 2rem;
        padding-bottom: 0.5rem;
        margin-bottom: 0;
        font-weight: 700;
        color: #333;
        background: none;
        -webkit-text-fill-color: initial;
        -webkit-background-clip: initial;
      }
      .event-name-highlight h2::after {
        content: "";
        position: absolute;
        bottom: 0;
        left: 25%;
        width: 50%;
        height: 3px;
        background-color: #999;
        border-radius: 2px;
      }

      /* 備考（折りたたみ）の行 */
      .note-row {
        display: flex;
        align-items: baseline;
        gap: 0.75rem;
        border-bottom: 1px solid #eee;
        padding-bottom: 0.5rem;
        margin: 0.6rem 0;
        font-size: 1.45rem;
        line-height: 1.9;
        color: #444;
      }
      .note-row > strong { flex: 0 0 7.5em; white-space: nowrap; color: #333; font-weight: 600; }
      .note-details summary {
        cursor: pointer;
        list-style: none; /* デフォルトのマーカーを消す */
        font-weight: 600;
        text-decoration: underline;
        color: #ff7f00;
      }
      .note-details summary::-webkit-details-marker { display: none; }
      .note-details { display: block; }
      .note-details .note-body { margin-top: 0.4rem; color: #333; font-weight: 400; }
      @media (max-width: 600px) {
        .note-row { font-size: 1.35rem; line-height: 1.85; }
        .note-row > strong { flex-basis: 6.5em; }
      }

      /* ボタンの可読性を少しだけUP（安全な微調整） */
      .tournament-item a.button-link { padding: 6px 12px; font-size: 1rem; }

      /* ========== Prize (image/link rendering) ========== */
      .prize-block { margin-top: .25rem; }
      .prize-text { margin: 0.25rem 0 0.5rem; color:#333; }
      .prize-media { display:block; }
      .prize-media img {
        max-width: 100%;
        height: auto;
        display: block;
        border-radius: 10px;
        margin: 8px auto;
        max-height: 480px; /* 画像の縦サイズを制御 */
        object-fit: contain; /* 縦横比を維持して縮小 */
      }
      .prize-link a { word-break: break-all; }
    </style>
  </head>
  
  <body>

       <!-- サイト共通ヘッダー（ロゴ/ナビ） -->
    <Header  />
 

    <main class="main-container">
      {data ? (
        <>
          <!-- タイトル＆イベント名強調 -->
          <h1 class="title">トーナメント詳細</h1>
          <div class="event-name-highlight">
            <h2>{data.eventName}</h2>
          </div>

          <!-- 基本情報（場所/日付/開始/締切/種類） -->
          <div class="tournament-item">
            <h2 class="section-label">基本情報</h2>
            <p><strong>場所：</strong>
              {instagramUrl
                ? <a href={instagramUrl} target="_blank" rel="noopener noreferrer">{data.storeName}</a>
                : data.storeName || data.postedBy || "未登録"}
            </p>
            <p><strong>日付：</strong>{data.startDate}</p>
            <p><strong>開始：</strong>{data.startTime}</p>
            <p><strong>締切：</strong>{data.lateReg || "未設定"}</p>
            <p><strong>種類：</strong>{data.eventType || "不明"}</p>
          </div>

          <!-- 参加情報（費用やスタックなど） -->
          <div class="tournament-item">
            <h2 class="section-label">参加情報</h2>
            <p><strong>参加費：</strong>{data.buyIn} 円</p>
            <p><strong>リエントリー：</strong>{data.reentryFee ? `${data.reentryFee} 円` : "—"}</p>
            <p><strong>アドオン：</strong>{data.addon}</p>
            <p><strong>スタック：</strong>{data.stack}</p>
            <p><strong>プライズ：</strong></p>
            {(prizeTextWithoutUrls || prizeUrls.length > 0) ? (
              <div class="prize-block">
                {prizeTextWithoutUrls && <p class="prize-text">{prizeTextWithoutUrls}</p>}
                {prizeUrls.length > 0 && (
                  <div class="prize-media">
                    {prizeUrls.map(u =>
                      isPrizeImageUrl(u)
                        ? (
                          <a href={u} target="_blank" rel="noopener">
                            <img src={u} alt="Prize image" loading="lazy" decoding="async" />
                          </a>
                        )
                        : (
                          <p class="prize-link"><a href={u} target="_blank" rel="noopener">{u}</a></p>
                        )
                    )}
                  </div>
                )}
              </div>
            ) : (
              <p class="prize-text">—</p>
            )}
          </div>

          <!-- その他（外部URLや備考） -->
          <div class="tournament-item">
            <h2 class="section-label">その他</h2>
            <p><strong>URL：</strong>
              {data.structureUrl
                ? <>
                    <a href={data.structureUrl} target="_blank" rel="noopener noreferrer" class="button-link">ページを開く</a>
                    <span style="font-size: 0.85rem; color: #888; margin-left: 0.5rem;">
                      ({new URL(data.structureUrl).hostname})
                    </span>
                  </>
                : "なし"}
            </p>
            {data.note ? (
              <div class="note-row">
                <strong>備考：</strong>
                <details class="note-details">
                  <summary>タップして表示</summary>
                  <div class="note-body">{data.note}</div>
                </details>
              </div>
            ) : (
              <p><strong>備考：</strong>なし</p>
            )}
          </div>

          <!-- 案内文＆戻るボタン -->
          <p style="text-align: center; font-size: 0.95rem; color: #555; margin-top: 1.5rem;">
            その他ご不明な点は、開催店舗へ直接ご確認ください。
          </p>
          <a href="/tournaments/tournaments" class="back-link">← 一覧へ戻る</a>
        </>
      ) : (
        <p>データが見つかりませんでした。</p>
      )}
    </main>

    <!-- サイト共通フッター＆アナリティクス -->
    <Footer  />
    <Analytics />

    <!-- ヘッダーの動作（固定/開閉など） -->
    <script src="/js/header.js" type="module"></script>
  </body>
</html>