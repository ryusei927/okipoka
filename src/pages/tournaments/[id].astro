---
// src/pages/tournaments/[id].astro
export const prerender = false;

import Analytics from '@vercel/analytics/astro';
import "../../styles/mainstyle.css";
import "../../styles/footer.css";
import AdBanner from "../../components/AdBanner.astro"; 
import AdSquare from "../../components/AdSquare.astro";
import Footer from '../../components/Footer.astro';

import { initializeApp, getApps, getApp } from "firebase/app";
import { getFirestore, doc, getDoc } from "firebase/firestore";

const firebaseConfig = {
  apiKey: "AIzaSyB8q6HLBGi_DWmrvkGCaWK_B6EeP7D--wo",
  authDomain: "okipoka-v2.firebaseapp.com",
  projectId: "okipoka-v2",
  storageBucket: "okipoka-v2.firebasestorage.app",
  messagingSenderId: "6256473895",
  appId: "1:6256473895:web:df644eaac108a218d59b02",
  measurementId: "G-JLC2569WN3"
};

const app = getApps().length ? getApp() : initializeApp(firebaseConfig);
const db = getFirestore(app);

const { id } = Astro.params;
const docRef = doc(db, "tournaments", id as string);
const snap = await getDoc(docRef);
const data = snap.exists() ? snap.data() : null;

let instagramUrl = "";
if (data && data.storeId) {
  const storeRef = doc(db, "stores", data.storeId);
  const storeSnap = await getDoc(storeRef);
  if (storeSnap.exists()) {
    instagramUrl = storeSnap.data().instagramUrl || "";
  }
}

const prizeText: string = String(data?.prize ?? "");
const prizeUrls: string[] = prizeText.match(/https?:\/\/\S+/g) ?? [];
const prizeTextWithoutUrls: string = prizeText.replace(/https?:\/\/\S+/g, "").trim();
const isPrizeImageUrl = (u: string): boolean =>
  /\.(png|jpe?g|gif|webp|svg)(\?|$)/i.test(u) ||
  (u.includes("firebasestorage.googleapis.com") && u.includes("alt=media"));

const safe = (v: any, fallback = "") => (v === undefined || v === null ? fallback : String(v));
const pageTitle = data ? `${safe(data.eventName, "トーナメント詳細")} | OKIPOKA` : "トーナメント詳細 | OKIPOKA";
const pageDesc = data
  ? `${safe(data.storeName)} ${safe(data.startDate)} ${safe(data.startTime)} 開催のトーナメント詳細`
  : "OKIPOKAのトーナメント詳細ページ";
---

<html lang="ja">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" content={pageDesc} />
    <meta property="og:title" content={pageTitle} />
    <title>{pageTitle}</title>
    <style>
      /* --- スタイルは変更なし --- */
      :root{--ok-orange:#ff7f00;--ok-ink:#222;--ok-muted:#6b7280;--ok-border:#e5e7eb;--ok-bg:#f9fafb;}
      .detail-container { max-width: 800px; margin: 2rem auto; }
      .card{ background:#fff; border:1px solid var(--ok-border); padding:1.5rem 1.5rem 1.25rem; box-shadow:0 6px 16px rgba(0,0,0,.06); }
      .card h2.section-label{ color:var(--ok-ink); border:0; margin: .25rem 0 .25rem; font-size:1.15rem; font-weight:800; display:flex; align-items:center; gap:.6rem; }
      .card h2.section-label::before{ content:""; width:10px; height:10px; background:var(--ok-orange); border-radius:3px; }
      .kv{ display:flex; flex-direction:column; gap:.15rem; }
      .kv-row{ display:grid; grid-template-columns: 7.5em 1fr; align-items:baseline; padding:.7rem 0; border-bottom:1px dashed var(--ok-border); }
      .kv-row:last-child{ border-bottom:none; }
      .kv-label{ color:var(--ok-muted); font-weight:700; font-size: .98rem; }
      .kv-value{ color:var(--ok-ink); font-weight:700; font-size:1.05rem; }
      .kv-row.important .kv-value { font-weight: 700; }
      .kv-row.prize-row { align-items: flex-start; padding: 1rem 0; }
      .kv-row.prize-row .kv-label { padding-top: 0.25rem;}
      .mono{ font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace; }
      .event-name-highlight { background: linear-gradient(135deg, #fafafa 0%, #f5f5f5 100%); padding: 1.25rem 1.5rem; border-left: 4px solid var(--ok-orange); margin-bottom: 1rem; box-shadow: 0 2px 8px rgba(0,0,0,0.04); text-align: center; }
      .event-name-highlight h2 { font-size: clamp(1.2rem, 4.5vw, 1.8rem); font-weight: 800; margin: 0; color: #1a1a1a; }
      .prize-block { margin-top: .25rem; }
      .prize-text { margin: 0.25rem 0 0.5rem; color:#333; white-space: pre-wrap; }
      .prize-media img { max-width: 100%; height: auto; display: block; margin: 8px auto; max-height: 480px; object-fit: contain; }
      .prize-link a { word-break: break-all; }
      .meta-bar { display: flex; flex-wrap: wrap; align-items: center; justify-content: center; gap: .5rem .75rem; margin: 1rem 0; }
      .pill { display: inline-flex; align-items: center; padding: .22rem .5rem; border-radius: 999px; background: #fff1e6; border: 1px solid #ffd6b0; font-size: .85rem; color: #7a3e00; font-weight: 600; }
      .unified-info { max-width: 100%; margin: 1.5rem auto 2rem; }
      .kv-divider { height: 1px; background: linear-gradient(90deg, transparent, var(--ok-border), transparent); margin: 1rem 0; grid-column: 1 / -1; }
      .topbar { position: sticky; top: 0; z-index: 10; background: linear-gradient(180deg, rgba(255,255,255,0.98), rgba(255,255,255,0.92)); backdrop-filter: saturate(1.1) blur(4px); padding: .6rem 0 .3rem; margin-bottom: .5rem; border-bottom: 1px solid #eee; }
      .topbar-inner { max-width: 800px; margin: 0 auto; padding: 0 1rem; display:flex; align-items:center; justify-content: space-between; gap:.75rem; }
      .topbar a.back-mini { text-decoration:none; font-size:.95rem; color:#ff7f00; font-weight:700; }
      .meta-actions { display:flex; gap:.5rem; }
      .meta-actions .btn-sm { display:inline-flex; align-items:center; gap:.35rem; border: 1px solid #ddd; background:#fafafa; padding:.35rem .6rem; font-size:.95rem; text-decoration:none; color:#333; cursor: pointer; }
    </style>
  </head>
  <body>
    <AdBanner />
    <main class="detail-container">
      <div class="topbar">
        <div class="topbar-inner">
          <a href="/" class="back-mini">← TOP</a>
          <div class="meta-actions">
            <button id="shareBtn" class="btn-sm">共有</button>
            <button id="copyLinkBtn" class="btn-sm">リンクコピー</button>
          </div>
        </div>
      </div>
      
      {data ? (
        <>
          <div class="meta-bar">
            {data.eventType && <span class="pill">{data.eventType}</span>}
            {data.startDate && <span class="pill">{data.startDate}</span>}
            {data.startTime && <span class="pill">{data.startTime} 開始</span>}
            {data.lateReg && <span class="pill">LR {data.lateReg}</span>}
            {data.buyIn && <span class="pill">¥{data.buyIn}</span>}
          </div>
          <div class="event-name-highlight">
            <h2>{data.eventName}</h2>
          </div>

          <section class="card unified-info">
            <h2 class="section-label">トーナメント情報</h2>
            <div class="kv">
              <div class="kv-row important"><div class="kv-label">場所</div>
                <div class="kv-value">
                  {instagramUrl
                    ? <a href={instagramUrl} target="_blank" rel="noopener noreferrer">{data.storeName}</a>
                    : (data.storeName || "未登録")}
                </div>
              </div>
              <div class="kv-row important"><div class="kv-label">日付</div><div class="kv-value">{safe(data.startDate)}</div></div>
              <div class="kv-row important"><div class="kv-label">開始</div><div class="kv-value">{safe(data.startTime)}</div></div>
              <div class="kv-row"><div class="kv-label">締切</div><div class="kv-value">{safe(data.lateReg, "未設定")}</div></div>
              <div class="kv-row"><div class="kv-label">種類</div><div class="kv-value">{safe(data.eventType, "トーナメント")}</div></div>
              
              <div class="kv-divider"></div>
              <div class="kv-row important"><div class="kv-label">参加費</div><div class="kv-value">{data.buyIn ? `${safe(data.buyIn)}円` : "-"}</div></div>
              <div class="kv-row"><div class="kv-label">リエントリー</div><div class="kv-value">{data.reentryFee ? `${safe(data.reentryFee)}円` : "なし"}</div></div>
              <div class="kv-row"><div class="kv-label">アドオン</div><div class="kv-value">{data.addon ? `${safe(data.addon)}円` : "なし"}</div></div>
              <div class="kv-row"><div class="kv-label">スタック</div><div class="kv-value mono">{data.stack ? `${safe(data.stack)}点` : "-"}</div></div>
              
              {(prizeTextWithoutUrls || prizeUrls.length > 0) && (
                <>
                  <div class="kv-divider"></div>
                  <div class="kv-row prize-row">
                    <div class="kv-label">プライズ</div>
                    <div class="kv-value">
                      <div class="prize-block">
                        {prizeTextWithoutUrls && <p class="prize-text">{prizeTextWithoutUrls}</p>}
                        {prizeUrls.length > 0 && (
                          <div class="prize-media">
                            {prizeUrls.map(u => isPrizeImageUrl(u)
                                ? <a href={u} target="_blank" rel="noopener"><img src={u} alt="Prize image" loading="lazy"/></a>
                                : <p class="prize-link"><a href={u} target="_blank" rel="noopener">{u}</a></p>
                            )}
                          </div>
                        )}
                      </div>
                    </div>
                  </div>
                </>
              )}
            </div>
          </section>
        </>
      ) : (
        <p>データが見つかりませんでした。</p>
      )}
    </main>
    <AdSquare />
    <Analytics />

    {/* ★★★ 修正点: define:vars を使ってサーバー側のデータを渡す ★★★ */}
    <script define:vars={{ eventData: data }}>
      // サーバー側から渡された eventData を受け取る
      const data = eventData;

      const copyBtn = document.getElementById('copyLinkBtn');
      if (copyBtn) {
        copyBtn.addEventListener('click', (e) => {
          e.preventDefault();
          navigator.clipboard?.writeText(window.location.href).then(() => {
            copyBtn.textContent = 'コピーしました';
            setTimeout(() => { copyBtn.textContent = 'リンクコピー' }, 2000);
          }).catch(() => alert('コピーできませんでした'));
        });
      }

      const shareBtn = document.getElementById('shareBtn');
      if (shareBtn && data) {
        const shareData = {
          title: data.eventName || 'OKIPOKA トーナメント',
          text: `${data.storeName} ${data.startDate} ${data.startTime}`.trim(),
          url: window.location.href
        };
        shareBtn.addEventListener('click', (e) => {
          e.preventDefault();
          if (navigator.share) {
            navigator.share(shareData).catch(() => {});
          } else {
            // navigator.shareが使えないブラウザではコピー機能を呼び出す
            copyBtn?.click();
          }
        });
      }
    </script>
  </body>
  <Footer></Footer>
</html>