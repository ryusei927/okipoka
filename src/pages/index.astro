---
import "../styles/global.css";
import "../styles/footer.css";
import Analytics from "@vercel/analytics/astro";
import StoreList from "../components/StoreList.astro";
import AdBanner from "../components/AdBanner.astro"; 
import AdSquare from "../components/AdSquare.astro";
import AnnouncementBanner from "../components/AnnouncementBanner.astro";
import Footer from "../components/Footer.astro";

---

<!doctype html>
<html lang="ja">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>OKIPOKA | 沖縄ポーカー情報ポータル</title>
    <meta name="description" content="沖縄のポーカートーナメント情報をリアルタイムでお届け。参加費、開催日時、店舗情報などを一目で確認できます。" />
    
    <!-- PWA設定 -->
    <link rel="manifest" href="/manifest.json" />
    <meta name="theme-color" content="#ff7f00" />
    <meta name="apple-mobile-web-app-capable" content="yes" />
    <meta name="apple-mobile-web-app-status-bar-style" content="default" />
    <meta name="apple-mobile-web-app-title" content="OKIPOKA" />
    <link rel="apple-touch-icon" href="/images/logo.png" />
    
    <!-- その他のメタタグ -->
    <link rel="icon" href="/favicon.ico" type="image/x-icon" />
    <meta property="og:title" content="OKIPOKA | 沖縄ポーカー情報ポータル" />
    <meta property="og:description" content="沖縄のポーカートーナメント情報をリアルタイムでお届け" />
    <meta property="og:image" content="/images/logo.png" />
    <meta property="og:type" content="website" />
    <style>
      .hero { position: relative; background-image: url("/images/image1.png"); background-size: cover; background-position: center; border-bottom: 1px solid var(--color-border); height: 180px; }
      @media (min-width: 768px) { .hero { height: 460px; } }
      @media (min-width: 1024px) { .hero { height: 590px; } }
      .section-title { text-align: center; margin-bottom: 1.5rem; font-size: 1.5rem; font-weight: 800; color: #333; }
      .date-picker-wrapper { text-align: center; margin: 2rem auto 1.5rem auto; padding: 1rem; background-color: var(--color-surface); border-radius: 8px; box-shadow: 0 2px 8px rgba(0,0,0,0.05); max-width: 400px; }
      #datePicker { padding: 0.5rem; border-radius: 4px; border: 1px solid var(--color-border); background-color: #fff; color: var(--color-text); font-size: 1rem; }
      .container { max-width: 900px; }
      #tournament-list { display: grid; gap: 0.8rem; }
      
      /* ブログバナーのスタイル */
      .blog-banner-link {
        display: block;
        position: relative;
        border-radius: 12px;
        overflow: hidden;
        transition: all 0.3s ease;
        box-shadow: 0 4px 20px rgba(0,0,0,0.1);
        text-decoration: none;
        color: inherit;
      }
      
      .blog-banner-link:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 30px rgba(0,0,0,0.15);
      }
      
      .blog-banner {
        width: 100%;
        height: auto;
        display: block;
        transition: transform 0.3s ease;
      }
      
      .blog-banner-link:hover .blog-banner {
        transform: scale(1.05);
      }
      
      .blog-banner-overlay {
        position: absolute;
        bottom: 0;
        left: 0;
        right: 0;
        background: linear-gradient(transparent, rgba(0,0,0,0.7));
        color: white;
        padding: 2rem 1.5rem 1.5rem 1.5rem;
        text-align: left;
        transition: all 0.3s ease;
      }
      
      .blog-banner-overlay h3 {
        margin: 0 0 0.5rem 0;
        font-size: 1.5rem;
        font-weight: 700;
        text-shadow: 2px 2px 4px rgba(0,0,0,0.5);
      }
      
      .blog-banner-overlay p {
        margin: 0;
        font-size: 1rem;
        font-weight: 600;
        opacity: 0.9;
        transition: opacity 0.3s ease;
      }
      
      .blog-banner-link:hover .blog-banner-overlay p {
        opacity: 1;
      }
      
      /* レスポンシブ対応 */
      @media (max-width: 768px) {
        .blog-banner-overlay {
          padding: 1.5rem 1rem 1rem 1rem;
        }
        
        .blog-banner-overlay h3 {
          font-size: 1.2rem;
        }
        
        .blog-banner-overlay p {
          font-size: 0.9rem;
        }
      }
    </style>
  </head>
  <body>
    <main>

      <section class="hero"></section>

      <AdBanner />
      <div class="container">
        <section id="tournaments-today">
          <h2 class="section-title">トーナメント情報</h2>
          <div class="date-picker-wrapper">
            <label for="datePicker" style="font-weight: bold; margin-right: 0.5em;">表示日を選択：</label>
            <input type="date" id="datePicker" />
          </div>
          <div id="tournament-list">
            <p style="text-align:center;">トーナメント情報を読み込んでいます...</p>
          </div>
        </section>
        <AdSquare />
        <section id="blog-section" style="margin-top: 4rem;">
          <h2 class="section-title">ブログ</h2>
          <a href="/blog" class="blog-banner-link">
            <img src="/images/blog_banner.png" alt="OKIPOKA Blog - ポーカー戦略・理論・最新情報" class="blog-banner" />
            <div class="blog-banner-overlay">
              <h3>ポーカー戦略・理論・最新情報</h3>
              <p>記事を読む →</p>
            </div>
          </a>
        </section>
        
        <section id="stores-list" style="margin-top: 4rem;">
          <h2 class="section-title">店舗一覧</h2>
          <StoreList />
        </section>
      </div>
      <AdBanner />
    </main>
    <Footer />
    <Analytics />

    <script type="module" src="/js/tournaments.js"></script>
    
    <!-- PWA機能 -->
    <script>
      // サービスワーカーの登録
      if ('serviceWorker' in navigator) {
        window.addEventListener('load', () => {
          navigator.serviceWorker.register('/sw.js')
            .then((registration) => {
              console.log('SW registered: ', registration);
            })
            .catch((registrationError) => {
              console.log('SW registration failed: ', registrationError);
            });
        });
      }

      // インストールプロンプトの処理（右下の小さなボタン）
      let deferredPrompt: any;
      const installButton = document.createElement('div');
      installButton.innerHTML = `
        <button id="install-floating-btn" style="
          position: fixed;
          bottom: 20px;
          right: 20px;
          background: #ff7f00;
          color: white;
          border: none;
          padding: 12px 16px;
          border-radius: 25px;
          font-size: 14px;
          font-weight: 600;
          cursor: pointer;
          box-shadow: 0 4px 12px rgba(255, 127, 0, 0.3);
          transition: all 0.3s ease;
          z-index: 1000;
          display: none;
        " onmouseover="this.style.transform='translateY(-2px)'; this.style.boxShadow='0 6px 16px rgba(255, 127, 0, 0.4)'"
           onmouseout="this.style.transform='translateY(0)'; this.style.boxShadow='0 4px 12px rgba(255, 127, 0, 0.3)'">
          Install
        </button>
      `;
      document.body.appendChild(installButton);

      // デバッグ用：常にボタンを表示
      setTimeout(() => {
        const floatingBtn = document.getElementById('install-floating-btn');
        if (floatingBtn) {
          floatingBtn.style.display = 'block';
        }
      }, 1000);

      window.addEventListener('beforeinstallprompt', (e) => {
        e.preventDefault();
        deferredPrompt = e;
        
        // インストールボタンを表示
        const floatingBtn = document.getElementById('install-floating-btn');
        if (floatingBtn) {
          floatingBtn.style.display = 'block';
        }
      });

      document.addEventListener('click', (e) => {
        if (e.target instanceof HTMLElement && e.target.id === 'install-floating-btn') {
          if (deferredPrompt) {
            // PWAインストールプロンプトを表示
            deferredPrompt.prompt();
            deferredPrompt.userChoice.then((choiceResult: { outcome: 'accepted' | 'dismissed' | string }) => {
              if (choiceResult.outcome === 'accepted') {
                console.log('User accepted the install prompt');
              }
              deferredPrompt = null;
              // インストール後はボタンを隠す
              const floatingBtn = document.getElementById('install-floating-btn');
              if (floatingBtn) {
                floatingBtn.style.display = 'none';
              }
            });
          } else {
            // フォールバック：ブラウザの標準的な「ホーム画面に追加」を案内
            alert('ブラウザのメニューから「ホーム画面に追加」を選択してください。\n\nSafari: 共有ボタン → ホーム画面に追加\nChrome: メニュー → アプリをインストール');
          }
        }
      });

      // インストール完了時にボタンを非表示
      window.addEventListener('appinstalled', () => {
        console.log('PWA was installed');
        const floatingBtn = document.getElementById('install-floating-btn');
        if (floatingBtn) {
          floatingBtn.style.display = 'none';
        }
      });
    </script>
  </body>
</html>