---
// src/components/StoreList.astro

// ★★★ ここからが修正・追加するコード ★★★
import { initializeApp, getApp, getApps } from "firebase/app";
import { getFirestore, collection, getDocs } from "firebase/firestore";

// Firebaseの接続情報（他のファイルからコピー）
const firebaseConfig = {
  apiKey: "AIzaSyB8q6HLBGi_DWmrvkGCaWK_B6EeP7D--wo",
  authDomain: "okipoka-v2.firebaseapp.com",
  projectId: "okipoka-v2",
  storageBucket: "okipoka-v2.firebasestorage.app",
  messagingSenderId: "6256473895",
  appId: "1:6256473895:web:df644eaac108a218d59b02",
  measurementId: "G-JLC2569WN3"
};

const app = getApps().length ? getApp() : initializeApp(firebaseConfig);
const db = getFirestore(app);

// Firestoreの'stores'コレクションから全店舗の情報を取得
const snapshot = await getDocs(collection(db, "stores"));
const stores: Store[] = snapshot.docs.map(doc => {
  const data = doc.data();
  return {
    id: doc.id,
    name: data.name,
    area: data.area,
    logoUrl: data.logoUrl,
    logo: data.logo
  };
});


type Store = {
  id: string;
  name: string;
  area: string;
  logoUrl?: string; // logoからlogoUrlに変更
  logo?: string; // 互換性のために残しても良い
};

type GroupedStores = { [area: string]: Store[] };

const groupedStores: GroupedStores = stores.reduce((acc, store) => {
  if (!acc[store.area]) {
    acc[store.area] = [];
  }
  acc[store.area].push(store);
  return acc;
}, {} as GroupedStores);
---

<div class="store-list-container">
  {Object.entries(groupedStores).map(([area, storesInArea]) => (
    <section class="store-area">
      <h2 class="area-title">{area}</h2>
      <div class="store-list">
        {storesInArea.map(store => (
          <a href={`/stores/${store.id}`} class="store-card">
            {/* logoUrlを見るように修正 */}
            <img src={store.logoUrl || store.logo || '/images/sample.png'} alt={`${store.name} Logo`} 
                 onerror="this.onerror=null; this.src='/images/sample.png';" />
            <h3>{store.name}</h3>
          </a>
        ))}
      </div>
    </section>
  ))}
</div>

{/* styleタグは変更不要なので、そのまま残してください */}
<style>
  .area-title {
    font-size: 1rem;
    font-weight: 600;
    color: #666;
    margin: 2rem 0 0.5rem;
    border-left: 3px solid var(--color-primary);
    padding-left: 0.5rem;
  }
  .store-list {
    display: flex;
    flex-direction: column;
    gap: 10px;
  }
  .store-card {
    display: flex;
    align-items: center;
    border: none;
    background: #fafafa;
    border-radius: 6px;
    padding: 14px 16px;
    text-decoration: none;
    color: inherit;
    transition: background 0.2s ease;
  }
  .store-card:hover {
    background: #f0f0f0;
  }
  .store-card img {
    width: 48px;
    height: 48px;
    object-fit: contain;
    margin-right: 12px;
    background: #fff;
    border-radius: 50%;
    border: 1px solid #eee;
    padding: 4px;
  }
  .store-card h3 {
    font-size: 1rem;
    color: #333;
    margin: 0;
    text-align: left;
  }
  .store-card.hidden {
    display: none;
  }
</style>